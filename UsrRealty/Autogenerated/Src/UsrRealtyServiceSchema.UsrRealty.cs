namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: UsrRealtyServiceSchema

	/// <exclude/>
	public class UsrRealtyServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public UsrRealtyServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public UsrRealtyServiceSchema(UsrRealtyServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("efc62cb6-0346-4429-a702-6178be71ff1d");
			Name = "UsrRealtyService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d9b5577d-61c2-43f3-a405-b6b5ce37d97c");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,181,84,77,143,218,48,16,61,119,37,254,195,52,167,68,162,145,122,45,221,74,208,2,162,21,176,218,176,226,176,218,131,73,6,54,170,227,100,109,135,18,177,252,247,157,36,6,18,32,244,67,42,151,144,241,243,123,111,222,196,22,44,66,149,48,31,97,134,82,50,21,47,181,251,53,22,203,112,149,74,166,195,88,180,110,182,173,27,128,84,133,98,5,94,166,52,70,174,135,114,29,250,56,142,3,228,157,22,208,239,42,196,157,227,226,79,96,93,95,135,235,66,180,64,31,193,85,107,18,221,111,189,83,182,35,128,164,8,20,69,37,199,169,94,131,139,124,147,135,74,145,178,167,153,198,35,236,209,24,164,72,180,100,190,126,50,164,143,93,149,76,80,147,82,66,134,23,33,15,117,118,143,47,105,40,49,66,161,149,93,125,201,187,131,91,248,205,150,28,229,154,66,224,60,229,42,73,186,224,161,15,62,103,74,193,61,50,174,51,227,7,62,65,143,41,52,111,109,24,209,106,48,21,60,171,182,177,15,113,91,180,83,254,39,235,211,4,203,209,86,155,170,172,83,26,35,177,142,127,162,61,70,253,28,7,100,221,186,155,122,51,171,13,189,56,200,60,157,241,188,29,130,141,73,140,173,240,80,117,231,146,37,9,6,109,67,88,97,5,200,91,67,165,7,177,140,152,174,237,47,75,238,119,21,139,54,193,84,18,11,133,215,113,121,62,239,76,60,1,250,97,196,56,12,81,143,217,230,78,82,32,189,108,150,37,56,10,108,165,101,62,103,89,100,87,214,218,80,43,78,151,75,148,102,165,106,251,224,219,160,105,68,52,176,9,29,23,167,22,215,246,82,175,225,18,140,180,59,82,147,148,243,169,236,71,137,206,236,170,17,7,94,95,225,10,170,226,204,169,57,59,200,64,35,67,197,173,115,201,224,182,137,80,162,78,165,128,15,31,59,151,182,1,236,90,231,85,15,57,250,26,84,249,184,5,129,191,76,205,126,80,40,233,51,19,244,159,62,184,139,86,232,184,242,52,18,246,32,21,190,75,3,180,173,7,37,139,41,90,78,67,223,238,64,198,145,125,62,145,58,104,254,140,18,11,182,50,68,203,161,144,250,47,41,227,118,41,233,222,49,73,187,53,74,59,183,60,76,195,160,62,160,70,253,174,8,10,226,202,136,254,130,189,58,216,19,137,189,2,83,38,193,206,133,188,247,31,188,68,149,242,60,240,50,121,183,191,65,63,213,232,249,140,51,249,217,160,190,216,206,145,99,207,96,166,92,18,152,229,253,218,142,78,86,227,29,113,229,138,24,246,255,233,134,248,95,215,67,157,223,92,21,230,44,211,77,209,223,176,40,225,104,55,29,230,147,164,172,233,143,247,214,89,80,173,253,203,46,127,236,222,0,35,19,137,86,76,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("efc62cb6-0346-4429-a702-6178be71ff1d"));
		}

		#endregion

	}

	#endregion

}

